#pragma checksum "C:\Users\Joshua\Desktop\KarcisApp\Karcis\Views\Admin\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "69c94c387f936cdfab0e5d63f47f72c806ecb761"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_Index), @"mvc.1.0.view", @"/Views/Admin/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Joshua\Desktop\KarcisApp\Karcis\Views\_ViewImports.cshtml"
using Karcis;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Joshua\Desktop\KarcisApp\Karcis\Views\_ViewImports.cshtml"
using Karcis.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"69c94c387f936cdfab0e5d63f47f72c806ecb761", @"/Views/Admin/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7e6f190ad19e2292ffa81e9cf26bf665e92e1e14", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<BookingViewModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/payments.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Joshua\Desktop\KarcisApp\Karcis\Views\Admin\Index.cshtml"
  
    ViewData["Title"] = "Payments";
    Layout = "_LoggedinLayout";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            DefineSection("stylesheets", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "69c94c387f936cdfab0e5d63f47f72c806ecb7614122", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral(@"
<!-- Ongoing Payments -->
<div id=""ongoingPayments"">
    <h1 class=""pageTitle"">Ongoing Payments</h1>
    <div id=""paymentsContainer"">
        <div id=""paymentsHeader"">
            <div class=""headerTextNumber"">
                <p class=""headerText"">No.</p>
            </div>
            <div class=""headerTextId"">
                <p class=""headerText"">Booking ID</p>
            </div>
            <div class=""headerTextUsername"">
                <p class=""headerText"">Username</p>
            </div>
            <div class=""headerTextStatus"">
                <p class=""headerText"">Booking Status</p>
            </div>
            <div class=""headerTextAction"">
                <p class=""headerText"">Actions</p>
            </div>
        </div>
        <div id=""paymentsList"">
        </div>
    </div>
</div>
<!-- Booking Detail Popup -->
<div id=""bookingDetailPopUp"">
    <div id=""bookingContentContainer"">
        <div id=""bookingHeader"">
            <h1 class=""bookingTitle"">Booking Det");
            WriteLiteral(@"ail</h1>
            <span class=""iconify"" id=""closeBookingDetailPopUp"" data-icon=""charm:circle-cross"" onclick=""closeAll()""></span>
        </div>
        <div id=""bookingBody"">
            <h2 class=""bookingText bookingId"">
                Booking #
            </h2>
            <div class=""bookingContent"">
                <div class=""bookingContentLeft"">
                    <p class=""bookingTypeText"">
                        UserID
                    </p>
                </div>
                <div class=""bookingContentRight"">
                    <p class=""bookingTypeTotal userIdValue"">
                        
                    </p>
                </div>
            </div>
            <div class=""bookingContent"">
                <div class=""bookingContentLeft"">
                    <p class=""bookingTypeText"">
                        Quantities
                    </p>
                </div>
                <div class=""bookingContentRight"">
                    <p class=""bookingT");
            WriteLiteral(@"ypeTotal numberOfTickets"">
                        
                    </p>
                </div>
            </div>
            <div class=""bookingContent"">
                <div class=""bookingContentLeft"">
                    <p class=""bookingTypeText"">
                        Amount
                    </p>
                </div>
                <div class=""bookingContentRight"">
                    <p class=""bookingTypeTotal totalAmmount"">
                        
                    </p>
                </div>
            </div>
        </div>
        <div id=""bookingFooter"">
            <a href=""#"" class=""bookingCancelCancel"" onclick=""changeBookingStatus('Declined')"">
                Decline
            </a>
            <a href=""#"" class=""bookingCancelYes"" onclick=""changeBookingStatus('Approved')"">
                Approve
            </a>
            <div class=""spacer"" style=""clear: both;""></div>
        </div>
    </div>
</div>
<!-- Booking Declined -->
<div id=""bookingDe");
            WriteLiteral(@"clined"">
    <div id=""bookingContentContainer"">
        <div id=""bookingHeader"">
            <h1 class=""bookingTitle"">Payment Detail</h1>
            <span class=""iconify"" id=""closeBookingDetailPopUp"" data-icon=""charm:circle-cross"" onclick=""closeAll()""></span>
        </div>
        <div id=""bookingBody"">
            <p class=""bookingCancelText"">
                Payment Declined
            </p>
        </div>
        <div id=""bookingFooter"">
            <a href=""#"" class=""bookingCancelBack"" onclick=""closeAll()"">
                Back
            </a>
            <div class=""spacer"" style=""clear: both;""></div>
        </div>
    </div>
</div>
<!-- Booking Approved -->
<div id=""bookingApproved"">
    <div id=""bookingContentContainer"">
        <div id=""bookingHeader"">
            <h1 class=""bookingTitle"">Payment Detail</h1>
            <span class=""iconify"" id=""closeBookingDetailPopUp"" data-icon=""charm:circle-cross"" onclick=""closeAll()""></span>
        </div>
        <div id=""bookingBody");
            WriteLiteral(@""">
            <p class=""bookingCancelText"">
                Payment Approved
            </p>
        </div>
        <div id=""bookingFooter"">
            <a href=""#"" class=""bookingCancelBack"" onclick=""closeAll()"">
                Back
            </a>
            <div class=""spacer"" style=""clear: both;""></div>
        </div>
    </div>
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        if ($(""#footer"").offset().top < window.innerHeight - $(""#footer"").height()) {
            $(""#footer"").css(""position"", ""fixed"");
            $(""#footer"").css(""bottom"", ""0"");
        }
        else {
            $(""#footer"").css(""position"", ""flex"");
        }

        $("".bookingCancelCancel"").on(""click"", function () {
            $(""#bookingDeclined"").css(""display"", ""flex"");
        })

        $("".bookingCancelYes"").on(""click"", function () {
            $(""#bookingApproved"").css(""display"", ""flex"");
        })

        function closeAll() {
            $(""#bookingDetailPopUp"").css(""display"", ""none"");
            $(""#bookingDeclined"").css(""display"", ""none"");
            $(""#bookingApproved"").css(""display"", ""none"");
        }

        async function getBookingByID(bookingID) {
            const data = await query_getBookingByID(bookingID);
            $("".bookingId"").text(""Booking #"" + data.bookingNumber);
            $("".userIdValue"").text(data.userID);
       ");
                WriteLiteral(@"     $("".numberOfTickets"").text(data.qty);
            $("".totalAmmount"").text(""Rp"" + data.totalPrice + "",00"");
            $(""#bookingDetailPopUp"").css(""display"", ""flex"");
            $("".bookingCancelCancel"").attr(""bookingNumber"", data.bookingNumber);
            $("".bookingCancelYes"").attr(""bookingNumber"", data.bookingNumber);
        }

        async function changeBookingStatus(status) {
            if (status == ""Approved"") {
                var bookingID = $("".bookingCancelYes"").attr(""bookingNumber"");
            }
            else {
                var bookingID = $("".bookingCancelCancel"").attr(""bookingNumber"");
            }

            const data = await query_changeBookingStatus(status, bookingID);
            loadPaymentList()
        }

        async function query_getBookingByID(bookingID) {
            const response = await fetch(""../Admin/GetBookingByID?id="" + bookingID, {
                method: ""GET""
            });
            const data = await response.json();
  ");
                WriteLiteral(@"          return data;
        }

        async function query_changeBookingStatus(status, bookingID) {
            const response = await fetch(""../Admin/ChangeBookingStatus?id=""+ bookingID + ""&status="" + status, {
                method: ""PATCH""
            });
            const data = await response.json();
            return data;
        }

        async function loadPaymentList() {
            const data = await query_getPayments();
            document.getElementById(""paymentsList"").innerHTML = data;
        }

        async function query_getPayments() {
            const response = await fetch(""../Admin/GetAllPayments"")
            const data = await response.text();
            return data;
        }

        loadPaymentList()
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<BookingViewModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
